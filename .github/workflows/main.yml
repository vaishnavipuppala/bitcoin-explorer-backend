name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bitcoin-explorer-backend:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/bitcoin-explorer-backend:latest

    - name: Debug SSH Connection
      run: |
        echo "SSH_USER: ${{ secrets.SSH_USER }}"
        echo "SSH_HOST: ${{ secrets.SSH_HOST }}"
        echo "Checking SSH key:"
        echo "${{ secrets.SSH_KEY }}" | ssh-keygen -l -f -

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Test SSH Connection
      run: ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

    - name: Log in to Docker Hub on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
        "

    - name: Copy Docker Compose file to EC2
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml bitcoin.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/bitcoin-explorer/

    - name: Deploy Docker Compose to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd /home/${{ secrets.SSH_USER }}/bitcoin-explorer &&
          docker-compose down &&
          docker-compose pull &&
          docker-compose up -d --build
        "